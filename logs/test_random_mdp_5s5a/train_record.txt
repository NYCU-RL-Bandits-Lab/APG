
=========================== Randomly generating a MDP ===========================

=========================== True gradient has no randomness, automatically modifying seed num to be 1 ===========================

=========================== Setting APG_graphing_size = APG_epoch_size = 1000 ===========================

=========================== Setting PG_graphing_size = PG_epoch_size = 1000 ===========================

=========================== Automatically set lr = (1-gamma)^3/8 = 0.00012499999999999992 ===========================

=========================== Policy Iteration terminal at epoch: 2, V: [8.89975389 8.79708092 8.65816168 8.81548244 8.78004069], optimal policy: [3 3 2 0 3] ===========================

=========================== Running ===========================
[2023/06/26 21:37:40] 	 Running PG...

=========================== True gradient, no seed ===========================
[2023/06/26 21:37:40] 	 Running APG...

=========================== True gradient, no seed ===========================
[2023/06/26 21:37:42] 	 Finish running PG...
[2023/06/26 21:37:43] 	 Finish running APG...

=========================== Plotting APG_train_stats_1000.png ===========================
[2023/06/26 21:37:43] 	 Computing V(ρ)
[2023/06/26 21:37:43] 	 Logging V(s1)
[2023/06/26 21:37:43] 	 Logging V(s2)
[2023/06/26 21:37:43] 	 Logging V(s3)
[2023/06/26 21:37:43] 	 Logging V(s4)
[2023/06/26 21:37:43] 	 Logging V(s5)
[2023/06/26 21:37:43] 	 Plotting π(a*|s1)
[2023/06/26 21:37:43] 	 Plotting π(a*|s2)
[2023/06/26 21:37:43] 	 Plotting π(a*|s3)
[2023/06/26 21:37:43] 	 Plotting π(a*|s4)
[2023/06/26 21:37:43] 	 Plotting π(a*|s5)
[2023/06/26 21:37:43] 	 Plotting θ(s1,a*)
[2023/06/26 21:37:43] 	 Plotting θ(s2,a*)
[2023/06/26 21:37:43] 	 Plotting θ(s3,a*)
[2023/06/26 21:37:43] 	 Plotting θ(s4,a*)
[2023/06/26 21:37:43] 	 Plotting θ(s5,a*)
[2023/06/26 21:37:43] 	 Plotting d_ρ(s)
[2023/06/26 21:37:43] 	 Plotting d_ρ(s)
[2023/06/26 21:37:43] 	 Plotting d_ρ(s)
[2023/06/26 21:37:43] 	 Plotting d_ρ(s)
[2023/06/26 21:37:43] 	 Plotting d_ρ(s)
[2023/06/26 21:37:43] 	 Plotting V(s1)
[2023/06/26 21:37:43] 	 Plotting V(s2)
[2023/06/26 21:37:43] 	 Plotting V(s3)
[2023/06/26 21:37:43] 	 Plotting V(s4)
[2023/06/26 21:37:43] 	 Plotting V(s5)
[2023/06/26 21:37:43] 	 Plotting V(ρ)
[2023/06/26 21:37:43] 	 Plotting -log(V* - V(ρ))
[2023/06/26 21:37:43] 	 Plotting -log(V*(ρ) - V(ρ))
[2023/06/26 21:37:43] 	 Plotting V*(ρ) - V(ρ)
[2023/06/26 21:37:43] 	 Logging π(a*|s)

=========================== Plotting PG_train_stats_1000.png ===========================
[2023/06/26 21:37:45] 	 Computing V(ρ)
[2023/06/26 21:37:45] 	 Logging V(s1)
[2023/06/26 21:37:45] 	 Logging V(s2)
[2023/06/26 21:37:45] 	 Logging V(s3)
[2023/06/26 21:37:45] 	 Logging V(s4)
[2023/06/26 21:37:45] 	 Logging V(s5)
[2023/06/26 21:37:45] 	 Plotting π(a*|s1)
[2023/06/26 21:37:45] 	 Plotting π(a*|s2)
[2023/06/26 21:37:45] 	 Plotting π(a*|s3)
[2023/06/26 21:37:45] 	 Plotting π(a*|s4)
[2023/06/26 21:37:45] 	 Plotting π(a*|s5)
[2023/06/26 21:37:45] 	 Plotting θ(s1,a*)
[2023/06/26 21:37:45] 	 Plotting θ(s2,a*)
[2023/06/26 21:37:45] 	 Plotting θ(s3,a*)
[2023/06/26 21:37:45] 	 Plotting θ(s4,a*)
[2023/06/26 21:37:45] 	 Plotting θ(s5,a*)
[2023/06/26 21:37:45] 	 Plotting d_ρ(s)
[2023/06/26 21:37:45] 	 Plotting d_ρ(s)
[2023/06/26 21:37:45] 	 Plotting d_ρ(s)
[2023/06/26 21:37:45] 	 Plotting d_ρ(s)
[2023/06/26 21:37:45] 	 Plotting d_ρ(s)
[2023/06/26 21:37:45] 	 Plotting V(s1)
[2023/06/26 21:37:45] 	 Plotting V(s2)
[2023/06/26 21:37:45] 	 Plotting V(s3)
[2023/06/26 21:37:45] 	 Plotting V(s4)
[2023/06/26 21:37:45] 	 Plotting V(s5)
[2023/06/26 21:37:45] 	 Plotting V(ρ)
[2023/06/26 21:37:45] 	 Plotting -log(V* - V(ρ))
[2023/06/26 21:37:45] 	 Plotting -log(V*(ρ) - V(ρ))
[2023/06/26 21:37:45] 	 Plotting V*(ρ) - V(ρ)
[2023/06/26 21:37:45] 	 Logging π(a*|s)

=========================== Finished training ===========================
